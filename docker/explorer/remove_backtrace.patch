diff --git a/external/easylogging++/easylogging++.cc b/external/easylogging++/easylogging++.cc
--- a/external/easylogging++/easylogging++.cc
+++ b/external/easylogging++/easylogging++.cc
@@ -3182,55 +3182,7 @@ std::ostream& operator<<(std::ostream& os, const StackTrace& st) {
 }
 
 void StackTrace::generateNew(void) {
-#if ELPP_STACKTRACE
-  m_stack.clear();
-  void* stack[kMaxStack];
-  unsigned int size = backtrace(stack, kMaxStack);
-  char** strings = backtrace_symbols(stack, size);
-  if (size > kStackStart) {  // Skip StackTrace c'tor and generateNew
-    for (std::size_t i = kStackStart; i < size; ++i) {
-      std::string mangName;
-      std::string location;
-      std::string hex;
-      std::string addr;
-
-      // entry: 2   crash.cpp.bin                       0x0000000101552be5 _ZN2el4base5debug10StackTraceC1Ev + 21
-      const std::string line(strings[i]);
-      auto p = line.find("_");
-      if (p != std::string::npos) {
-        mangName = line.substr(p);
-        mangName = mangName.substr(0, mangName.find(" +"));
-      }
-      p = line.find("0x");
-      if (p != std::string::npos) {
-        addr = line.substr(p);
-        addr = addr.substr(0, addr.find("_"));
-      }
-      // Perform demangling if parsed properly
-      if (!mangName.empty()) {
-        int status = 0;
-        char* demangName = abi::__cxa_demangle(mangName.data(), 0, 0, &status);
-        // if demangling is successful, output the demangled function name
-        if (status == 0) {
-          // Success (see http://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-html-USERS-4.3/a01696.html)
-          StackTraceEntry entry(i - 1, location, demangName, hex, addr);
-          m_stack.push_back(entry);
-        } else {
-          // Not successful - we will use mangled name
-          StackTraceEntry entry(i - 1, location, mangName, hex, addr);
-          m_stack.push_back(entry);
-        }
-        free(demangName);
-      } else {
-        StackTraceEntry entry(i - 1, line);
-        m_stack.push_back(entry);
-      }
-    }
-  }
-  free(strings);
-#else
   ELPP_INTERNAL_INFO(1, "Stacktrace generation not supported for selected compiler");
-#endif  // ELPP_STACKTRACE
 }
 
 // Static helper functions
