* What is Regno?
Currently... vaporware!

* What is the goal of Regno?
To enable as many people as possible to run their own sovereign Monero node, along with software that integrates with Monero in a way that maximizes personal autonomy.

The project name ("realm" in Esperanto) was chosen to reflect this goal: to become the master of your own realm.

The idea is for Regno to exist in a dedicated environment. This could be single-board-computer (ODROID, RPi4, etc), VPS, a NUC, a docker container on your desktop... etc. Dedicated hardware is encouraged but not a hard requirement.

* What are some pie-in-the-sky features planned for Regno?
- Run monerod, duh
- Modular: only install what you want. If you don't want a particular feature, it is not even downloaded.
- Web UI accessible via local network or via tor onion site / i2p eepsite
- Live dashboard with node & network info
- Easy tor install & configuration
- Easy i2pzero install & configuration
- Easy monero-pool setup, along with custom web UI
- Easy monero-lws setup
- Host your own MyMonero web wallet instance against monero-lws??
- Atomic swap daemon management
- Haveno integration
- Installation & config all done through web UI (but can use typical commandline methods if you want)
- One-click updates, which include all signature verifications, as well as backing up the previous version and rolling back if needed.
- Optional historical data collection & graphing (connected peers, mempool info, network difficulty / target / hashrate, etc)

* Distribution
- Github releases
- Regno nodes could optionally serve as torrent seeders for the latest release.

* Hardware
Probably recommend ODROID HC2 with a 1TB SSD? Support RPi 4, but discourage usage because no CPU crypto extensions.

* Tech
- Elixir backend for interacting with monero RPC, and storing historical data in postgres
- Postgresql to store historical data, using LISTEN and NOTIFY to update live
- Phoenix LiveView frontend, with some updates coming from backend and some from postgresql
- Python3 and bash for all setup scripts
- Nginx to sit in front of all web stuff
- Fail2ban to sit in front of all network stuff
- Does this all go inside Docker containers? Or provide a shell script that installs everything on Armbian? Or... both??

* Licensing
- Probably need to figure out what license to use that will accomodate all of the other projects used.
