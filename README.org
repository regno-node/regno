* What is the goal of Regno?
To enable as many people as possible to run & understand their own Monero node, along with other optional software that is complimentary to Monero.

You will be able to run Regno on a single-board-computer (ODROID, RPi4, etc), a VPS, a NUC, your desktop... etc. Dedicated hardware is encouraged but not a hard requirement.

* Usage
Run =./regno.sh setup= to (optionally) choose what services you would like to run.

Run =./regno.sh start= to start.

By default, Regno starts monerod, a blockchain explorer, and p2pool.

* What are some pie-in-the-sky features planned for Regno?
- Run monerod!
- Modular: only install what you want. If you don't want a particular feature, it is not even downloaded.
- Live dashboard with node & network info
- Automatic creation of tor hidden services for web UI, monerod RPC, etc.
- Easy updates (including signature verification), automatically backing up the previous version and allowing rollback if needed.
- Blockchain explorer
- Easy p2pool setup
- Easy Haveno install / integration
- Host your own MyMonero web wallet instance against your own monero-lws
- Configurable through web UI (and can always config through the commandline if you prefer)
- Optional historical data collection & graphing (connected peers, mempool info, network difficulty / target / hashrate, etc)
- Setup of atomic swap daemon & UI
- Run bitcoind + electrum server? (instead of using a public one for atomic swaps)
- Automatic i2p setup?
- Make setup even easier for small dedicated boards - provide an .img file based on Manjaro-ARM?
- Optional IPFS node?

* Hardware
Once ARM support is ready, will recommend ODROID HC2 with at least 1TB SSD. Should support RPi 4, but discourage usage because no CPU crypto extensions (super-slow chain sync)

* Tech
- Run within Docker containers, "orchestrate" with docker-compose & scripts
- sqlite to store historical data
- Phoenix LiveView frontend
- Elixir backend for interacting with monerod RPC, and storing historical data in sqlite
- bash for all setup scripts
- Nginx to sit in front of all web stuff
- Fail2ban to sit in front of all exposed network stuff

* Licensing
- MIT
